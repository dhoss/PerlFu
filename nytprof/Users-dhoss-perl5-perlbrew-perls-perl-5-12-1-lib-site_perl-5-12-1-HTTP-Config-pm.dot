digraph {
graph [overlap=false]
subgraph cluster_vars {
	label="vars";
	"vars::import";
}
subgraph cluster_LWP_UserAgent {
	label="LWP::UserAgent";
	"LWP::UserAgent::add_handler";
	"LWP::UserAgent::handlers";
}
subgraph cluster_HTTP_Response {
	label="HTTP::Response";
	"HTTP::Response::request";
}
subgraph cluster_UNIVERSAL {
	label="UNIVERSAL";
	"UNIVERSAL::can";
}
subgraph cluster_HTTP_Message {
	label="HTTP::Message";
	"HTTP::Message::AUTOLOAD";
	"HTTP::Message::__ANON__[HTTP/Message.pm:649]";
}
subgraph cluster_strict {
	label="strict";
	"strict::import";
}
subgraph cluster_HTTP_Request {
	label="HTTP::Request";
	"HTTP::Request::uri_canonical";
}
subgraph cluster_HTTP_Config {
	label="HTTP::Config";
	"HTTP::Config::BEGIN@4";
	"HTTP::Config::__ANON__[HTTP/Config.pm:152]";
	"HTTP::Config::CORE:subst";
	"HTTP::Config::add";
	"HTTP::Config::CORE:sort";
	"HTTP::Config::new";
	"HTTP::Config::BEGIN@5";
	"HTTP::Config::matching";
	"HTTP::Config::BEGIN@3";
}
"LWP::UserAgent::add_handler" -> "HTTP::Config::BEGIN@5";
"LWP::UserAgent::add_handler" -> "HTTP::Config::add";
"HTTP::Config::matching" -> "HTTP::Request::uri_canonical";
"LWP::UserAgent::handlers" -> "HTTP::Config::matching";
"HTTP::Config::__ANON__[HTTP/Config.pm:152]" -> "HTTP::Config::CORE:subst";
"HTTP::Config::matching" -> "HTTP::Config::CORE:subst";
"HTTP::Config::matching" -> "UNIVERSAL::can";
"HTTP::Config::BEGIN@5" -> "vars::import";
"HTTP::Config::BEGIN@3" -> "strict::import";
"LWP::UserAgent::add_handler" -> "HTTP::Config::BEGIN@3";
"HTTP::Config::matching" -> "HTTP::Response::request";
"HTTP::Config::matching" -> "HTTP::Config::__ANON__[HTTP/Config.pm:152]";
"HTTP::Config::__ANON__[HTTP/Config.pm:152]" -> "HTTP::Message::AUTOLOAD";
"HTTP::Config::__ANON__[HTTP/Config.pm:152]" -> "HTTP::Message::__ANON__[HTTP/Message.pm:649]";
"HTTP::Config::matching" -> "HTTP::Config::CORE:sort";
"LWP::UserAgent::add_handler" -> "HTTP::Config::BEGIN@4";
"LWP::UserAgent::add_handler" -> "HTTP::Config::new";
}
